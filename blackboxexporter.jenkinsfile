pipeline {
    agent any

    stages {
        stage('Checkout blackbox-exporter') {
            steps {
                dir('blackbox-exporter') {
                   git branch: 'master', url: 'https://github.com/prometheus/blackbox_exporter.git'
                }
            } //steps
        } //stage

        stage('Prepare IBM Cloud CLI') {
            steps {
                sh('ibmcloud update -f -q')
                sh('ibmcloud plugin install container-registry -f -q')
                sh('ibmcloud plugin install container-service -f -q')
                sh('ibmcloud plugin list')
            }
        }

        stage('Build blackbox-exporter image') {
            environment {
                IBMCLOUD_CREDS = credentials('ibm-cloud-cr')
            }

            steps {
                sh('ibmcloud login --apikey ${IBMCLOUD_CREDS_PSW} -r us-south')
                sh('ibmcloud cr login')
                dir('blackbox-exporter'){
                   sh('docker build -t us.icr.io/map-dev-namespace/blackbox-exporter:${BUILD_NUMBER} -f Dockerfile .')
                }
                sh('docker push us.icr.io/map-dev-namespace/blackbox-exporter:${BUILD_NUMBER}')
                sh('ibmcloud cr image-tag us.icr.io/map-dev-namespace/blackbox-exporter:${BUILD_NUMBER} us.icr.io/map-dev-namespace/blackbox-exporter:latest')
            } //steps
        } //stage

         stage('Deploy blackbox-exporter image to dev cluster') {
            environment {
                IBMCLOUD_CREDS = credentials('ibm-cloud-cr')
            }

            steps {
                sh('ibmcloud login --apikey ${IBMCLOUD_CREDS_PSW} -r us-south')
                sh('ibmcloud ks cluster config --cluster map-dal10-16x64-01')
                sh('kubectl config current-context')
                /*
                script {
                   def CONFIG_DIFF = sh( script: 'kubectl diff -f monitoring/blackboxexporter.yml', returnStatus: true)
                   if (CONFIG_DIFF == 0) {
                      echo 'Restarting blackbox-exporter deployment'
                      sh('kubectl rollout restart deployment blackbox-exporter -n monitoring')
                   } else {
                      echo 'Applying blackbox-exporter deployment changes'
                      sh('kubectl apply -f monitoring/blackboxexporter.yml')
                   }
                } //script
                */
            } //steps
         } //stage

    } //stages
    post {
        always {
            emailext to: 'bbotev@bg.ibm.com', 
                    subject: '${PROJECT_NAME} - Build # ${BUILD_NUMBER} - ${BUILD_STATUS}!',
                    body: '$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS: Check console output at $BUILD_URL to view the results.'

        } //always
    } //post
} //pipeline
